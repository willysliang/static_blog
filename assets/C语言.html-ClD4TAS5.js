import{_ as n,o as s,c as a,b as t}from"./app-Bvx-HY_0.js";const e={},p=t(`<h2 id="c语言" tabindex="-1"><a class="header-anchor" href="#c语言"><span>C语言</span></a></h2><h3 id="所遇问题" tabindex="-1"><a class="header-anchor" href="#所遇问题"><span>所遇问题：</span></a></h3><p><strong>绝对值的问题</strong></p><p>因为所定义的类型与所调用的绝对值函数类型不一致，也不会报错，但是他取的是根据绝对值类型来反馈值</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/*因为所定义的类型与所调用的绝对值函数类型不一致，也不会报错，但是他取的是根据绝对值类型来反馈值*/</span>
<span class="token keyword">int</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">//处理int类型的取绝对值</span>
<span class="token keyword">double</span> <span class="token function">fabs</span><span class="token punctuation">(</span><span class="token keyword">double</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//处理double类型的取绝对值</span>
<span class="token keyword">float</span> <span class="token function">fabsf</span><span class="token punctuation">(</span><span class="token keyword">float</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//处理float类型的取绝对值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="题库" tabindex="-1"><a class="header-anchor" href="#题库"><span><strong>题库</strong></span></a></h3><h4 id="自定义函数-限制小数的位数" tabindex="-1"><a class="header-anchor" href="#自定义函数-限制小数的位数"><span>自定义函数--&gt;限制小数的位数</span></a></h4><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/**  digit为精确的小数位数，number为所需要限制小数位数的number  **/</span> 
<span class="token keyword">float</span> <span class="token function">limit_digit</span><span class="token punctuation">(</span><span class="token keyword">int</span> digit<span class="token punctuation">,</span><span class="token keyword">float</span> number<span class="token punctuation">)</span><span class="token punctuation">{</span>	<span class="token comment">//限制小数的位数 </span>
	<span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token punctuation">;</span>
	<span class="token keyword">int</span> dig <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>digit<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		dig<span class="token operator">=</span>dig<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;小数的位数所需乘的倍数digit：%d\\n&quot;</span><span class="token punctuation">,</span>dig<span class="token punctuation">)</span><span class="token punctuation">;</span>
	number <span class="token operator">=</span> number<span class="token operator">*</span>dig<span class="token punctuation">;</span>		<span class="token comment">//对第一位小数进入整数位置，为了第二位小数四舍五入做铺垫 </span>
	i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>number<span class="token operator">+</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//对第dig位小数四舍五入</span>
	<span class="token keyword">float</span> num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> i<span class="token punctuation">;</span>
	num <span class="token operator">=</span> num<span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> num<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","C语言.html.vue"]]),d=JSON.parse('{"path":"/%E5%90%8E%E7%AB%AF%E5%9F%BA%E7%A1%80/C%E8%AF%AD%E8%A8%80.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"C语言","slug":"c语言","link":"#c语言","children":[{"level":3,"title":"所遇问题：","slug":"所遇问题","link":"#所遇问题","children":[]},{"level":3,"title":"题库","slug":"题库","link":"#题库","children":[]}]}],"git":{"updatedTime":1699357323000,"contributors":[{"name":"willy","email":"willysliang","commits":1}]},"filePathRelative":"后端基础/C语言.md"}');export{r as comp,d as data};
